---
import { getCollection, getEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import { getRelatedContent } from "../../utils/tagUtils.ts";
import { marked } from 'marked';
import ProjectGallery from '../../components/ProjectGallery';
import ModularSection from '../../components/ModularSection.astro';

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map(({ slug }) => ({ params: { slug } }));
}

const { slug } = Astro.params;
const post = await getEntry("posts", slug);
if (!post) throw new Error(`Post "${slug}" not found`);

const { Content } = await post.render();
const relatedContent = await getRelatedContent(post.data.tags, post.slug, 3);
---

<Layout seo={{ title: post.data.title, description: post.data.description }}>
  <article class="max-w-7xl mx-auto">
    <div class="prose max-w-2xl mx-auto">
      <h1>{post.data.title}</h1>
      <p class="text-sm text-base-content/70 font-bold mb-4">
        {post.data.date.toLocaleDateString()}
      </p>
      
      <!-- Tags -->
      {post.data.tags && post.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-6">
          {post.data.tags.map((tag) => (
            <a href={`/tags/${tag}`} class="badge badge-outline tag-hover-light-blue transition-colors">
              {tag}
            </a>
          ))}
        </div>
      )}
      
      <!-- Cover Image/Gallery -->
      {post.data.gallery && post.data.gallery.length > 0 ? (
        <ProjectGallery 
          images={post.data.gallery}
          autoplay={post.data.gallery.length > 1}
          autoplayInterval={4000}
          showThumbnails={true}
          showIndicators={true}
          size="medium"
          client:load
        />
      ) : (
        <Image
          src={post.data.cover}
          alt={post.data.title}
          width={560}
          height={315}
          class="mx-auto my-8 rounded-lg shadow-md"
        />
      )}
      
      <Content />
    </div>

    <!-- Modular Post Sections -->
    {post.data.sections && post.data.sections.length > 0 && (
      <div class="max-w-7xl mx-auto px-4 mt-12">
        <ModularSection sections={post.data.sections} />
      </div>
    )}
  </article>

  <!-- Related Content -->
  {relatedContent.length > 0 && (
    <section class="max-w-7xl mx-auto mt-12 pt-8 border-t border-base-300">
      <h2 class="text-2xl font-bold mb-6">Related Content</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {relatedContent.map(item => (
          <article class="card bg-base-100 shadow hover:shadow-lg transition-shadow duration-200">
            <a 
              href={`/${item.type === 'project' ? 'projects' : 'posts'}/${item.slug}/`}
              class="block"
            >
              <figure>
                <Image 
                  src={item.data.cover}
                  alt={item.data.title}
                  width={300}
                  height={200}
                  class="w-full h-32 object-cover"
                />
              </figure>
              <div class="card-body p-4">
                <div class="flex items-center gap-2 mb-2">
                  <div class={`badge badge-sm ${
                    item.type === 'project' ? 'badge-primary' : 'badge-secondary'
                  }`}>
                    {item.type}
                  </div>
                  <div class="text-xs text-base-content/60">
                    {item.sharedTags.length} shared tag{item.sharedTags.length !== 1 ? 's' : ''}
                  </div>
                </div>
                <h3 class="card-title text-base">
                  {item.data.title}
                </h3>
              </div>
            </a>
            <div class="px-4 pb-4">
              <div class="flex flex-wrap gap-1">
                {item.sharedTags.map(tag => (
                  <a 
                    href={`/tags/${tag}/`} 
                    class="badge badge-outline badge-xs tag-hover-light-blue transition-colors"
                    onclick="event.stopPropagation()"
                  >
                    {tag}
                  </a>
                ))}
              </div>
            </div>
          </article>
        ))}
      </div>
    </section>
  )}

  <!-- Navigation -->
  <div class="max-w-7xl mx-auto mt-12 pt-8 border-t border-base-300">
    <a href="/posts" class="btn btn-outline">
      ‚Üê Back to Posts
    </a>
  </div>
</Layout>
