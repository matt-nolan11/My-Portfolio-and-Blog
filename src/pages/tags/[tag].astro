---
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import { getAllTags, getContentByTag } from '../../utils/tagUtils';
import { formatProjectDate, getSortableDate } from '../../utils/dateUtils';

export async function getStaticPaths() {
  const tags = await getAllTags();
  
  return Promise.all(
    tags.map(async (tag) => {
      const content = await getContentByTag(tag.name);
      return {
        params: { tag: tag.name },
        props: { 
          tag: tag.name, 
          projects: content.projects,
          posts: content.posts,
          totalCount: content.totalCount
        },
      };
    })
  );
}

const { tag, projects, posts, totalCount } = Astro.props;

// Sort projects by date
const sortedProjects = projects.sort((a, b) => {
  const aDate = a.data.endDate || a.data.startDate;
  const bDate = b.data.endDate || b.data.startDate;
  return getSortableDate(bDate).getTime() - getSortableDate(aDate).getTime();
});

// Sort posts by date
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<Layout 
  seo={{
    title: `${tag}`,
    description: `All projects and blog posts tagged with ${tag}. ${totalCount} ${totalCount === 1 ? 'item' : 'items'} found.`
  }}
>
  <div class="max-w-7xl mx-auto px-4 py-8">
    <!-- Header -->
    <div class="prose prose-lg max-w-none mb-8">
      <div class="flex items-center gap-3 mb-4">
        <a href="/tags" class="btn btn-sm btn-outline">‚Üê All Tags</a>
        <div class="badge badge-primary badge-lg">{tag}</div>
      </div>
      <h1 class="text-4xl font-bold mb-2">Tagged: {tag}</h1>
      <p class="text-lg text-base-content/70">
        {totalCount} {totalCount === 1 ? 'item' : 'items'} found
        {projects.length > 0 && posts.length > 0 && 
          ` (${projects.length} ${projects.length === 1 ? 'project' : 'projects'}, ${posts.length} ${posts.length === 1 ? 'post' : 'posts'})`
        }
      </p>
    </div>

    <div class="space-y-12">
      <!-- Projects Section -->
      {projects.length > 0 && (
        <section>
          <h2 class="text-2xl font-semibold mb-6 flex items-center gap-2">
            Projects
            <div class="badge badge-secondary">{projects.length}</div>
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {sortedProjects.map(project => (
              <article class="card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300">
                <figure class="relative">
                  <Image 
                    src={project.data.cover}
                    alt={project.data.title}
                    width={400}
                    height={250}
                    class="w-full h-48 object-cover"
                  />
                  <div class="absolute top-2 right-2">
                    <div class={`badge ${
                      project.data.status === 'completed' ? 'badge-success' : 
                      project.data.status === 'in-progress' ? 'badge-warning' : 
                      'badge-info'
                    }`}>
                      {project.data.status}
                    </div>
                  </div>
                </figure>
                
                <div class="card-body">
                  <h3 class="card-title">
                    <a href={`/projects/${project.slug}/`} class="hover:text-primary transition-colors">
                      {project.data.title}
                    </a>
                  </h3>
                  
                  <p class="text-sm text-base-content/70 mb-3">
                    {project.data.description}
                  </p>
                  
                  <div class="flex flex-wrap gap-1 mb-3">
                    {project.data.tags.map(projectTag => (
                      <a 
                        href={`/tags/${projectTag}/`} 
                        class={`badge badge-outline badge-sm tag-hover-light-blue transition-colors ${
                          projectTag === tag ? 'badge-primary' : ''
                        }`}
                      >
                        {projectTag}
                      </a>
                    ))}
                  </div>
                  
                  <div class="card-actions justify-between items-center">
                    <div class="text-xs text-base-content/60">
                      {project.data.status === 'completed' && project.data.endDate ? (
                        <div>Completed: {formatProjectDate(project.data.endDate)}</div>
                      ) : project.data.status === 'in-progress' ? (
                        <div>Started: {formatProjectDate(project.data.startDate)}</div>
                      ) : (
                        <div>Planned: {formatProjectDate(project.data.startDate)}</div>
                      )}
                    </div>
                    
                    <a href={`/projects/${project.slug}/`} class="btn btn-sm btn-primary">
                      View Project
                    </a>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </section>
      )}

      <!-- Posts Section -->
      {posts.length > 0 && (
        <section>
          <h2 class="text-2xl font-semibold mb-6 flex items-center gap-2">
            Blog Posts
            <div class="badge badge-secondary">{posts.length}</div>
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {sortedPosts.map(post => (
              <article class="card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300">
                <figure>
                  <Image 
                    src={post.data.cover}
                    alt={post.data.title}
                    width={400}
                    height={250}
                    class="w-full h-48 object-cover"
                  />
                </figure>
                
                <div class="card-body">
                  <h3 class="card-title">
                    <a href={`/posts/${post.slug}/`} class="hover:text-primary transition-colors">
                      {post.data.title}
                    </a>
                  </h3>
                  
                  <p class="text-sm text-base-content/70 mb-3">
                    {post.data.description}
                  </p>
                  
                  <div class="flex flex-wrap gap-1 mb-3">
                    {post.data.tags.map(postTag => (
                      <a 
                        href={`/tags/${postTag}/`} 
                        class={`badge badge-outline badge-sm tag-hover-light-blue transition-colors ${
                          postTag === tag ? 'badge-primary' : ''
                        }`}
                      >
                        {postTag}
                      </a>
                    ))}
                  </div>
                  
                  <div class="card-actions justify-between items-center">
                    <div class="text-xs text-base-content/60">
                      {new Date(post.data.date).toLocaleDateString()}
                    </div>
                    
                    <a href={`/posts/${post.slug}/`} class="btn btn-sm btn-primary">
                      Read Post
                    </a>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </section>
      )}

      <!-- No content message -->
      {totalCount === 0 && (
        <div class="text-center py-12">
          <p class="text-lg text-base-content/60">No content found for tag {tag}</p>
          <a href="/tags" class="btn btn-primary mt-4">Browse All Tags</a>
        </div>
      )}
    </div>
  </div>
</Layout>
