---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import { formatProjectDate, calculateDuration } from '../../utils/dateUtils';
import { getRelatedContent } from '../../utils/tagUtils';
import { marked } from 'marked';
import ProjectGallery from '../../components/ProjectGallery.tsx';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

type Props = {
  project: CollectionEntry<'projects'>;
};

const { project } = Astro.props;
const { Content } = await project.render();

// Get related content based on shared tags
const relatedContent = await getRelatedContent(project.data.tags, project.slug, 3);
---

<Layout 
  seo={{
    title: project.data.title,
    description: project.data.description
  }}
>
  <article class="max-w-6xl mx-auto px-4 py-8">
    <!-- Project Header -->
    <header class="mb-8">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Project Image/Gallery -->
        <div class="lg:w-1/2">
          {project.data.gallery && project.data.gallery.length > 0 && project.data.galleryPosition === 'replace-cover' ? (
            <ProjectGallery 
              images={project.data.gallery}
              title={project.data.galleryTitle || project.data.title}
              autoplay={project.data.galleryOptions?.autoplay !== undefined ? project.data.galleryOptions.autoplay : project.data.gallery.length > 1}
              autoplayInterval={project.data.galleryOptions?.autoplayInterval || 4000}
              showThumbnails={project.data.galleryOptions?.showThumbnails !== undefined ? project.data.galleryOptions.showThumbnails : true}
              showIndicators={project.data.galleryOptions?.showIndicators !== false}
              size={project.data.galleryOptions?.size || 'medium'}
              client:load
            />
          ) : (
            <Image 
              src={project.data.cover}
              alt={project.data.title}
              width={600}
              height={400}
              class="w-full h-auto rounded-lg shadow-lg"
            />
          )}
        </div>
        
        <!-- Project Info -->
        <div class="lg:w-1/2">
          <h1 class="text-4xl font-bold mb-4">{project.data.title}</h1>
          <p class="text-lg text-base-content/70 mb-6">{project.data.description}</p>
          
          <!-- Status Badge -->
          <div class="mb-4">
            <div class={`badge badge-lg ${
              project.data.status === 'completed' ? 'badge-success' : 
              project.data.status === 'in-progress' ? 'badge-warning' : 
              'badge-info'
            }`}>
              {project.data.status.replace('-', ' ').toUpperCase()}
            </div>
          </div>
          
          <!-- Tags -->
          {project.data.tags.length > 0 && (
            <div class="mb-6">
              <h3 class="text-sm font-semibold mb-2">Tags</h3>
              <div class="flex flex-wrap gap-2">
                {project.data.tags.map(tag => (
                  <a href={`/tags/${tag}/`} class="badge badge-outline hover:badge-primary transition-colors">
                    {tag}
                  </a>
                ))}
              </div>
            </div>
          )}
          
          <!-- Action Links -->
          <div class="flex flex-wrap gap-3">
            {project.data.githubUrl && (
              <a 
                href={project.data.githubUrl} 
                class="btn btn-outline"
                target="_blank"
                rel="noopener noreferrer"
              >
                View on GitHub
              </a>
            )}
            {project.data.liveUrl && (
              <a 
                href={project.data.liveUrl} 
                class="btn btn-primary"
                target="_blank"
                rel="noopener noreferrer"
              >
                Live Demo
              </a>
            )}
          </div>
          
          <!-- Project Dates -->
          <div class="mt-6 text-sm text-base-content/60">
            {project.data.status === 'completed' && project.data.endDate ? (
              <div>
                <div>Started: {formatProjectDate(project.data.startDate)}</div>
                <div>Completed: {formatProjectDate(project.data.endDate)}</div>
                <div class="mt-1 font-medium">
                  Duration: {calculateDuration(project.data.startDate, project.data.endDate)}
                </div>
              </div>
            ) : project.data.status === 'in-progress' ? (
              <div>
                <div>Started: {formatProjectDate(project.data.startDate)}</div>
                <div class="mt-1 font-medium text-warning">In Progress</div>
              </div>
            ) : (
              <div>
                <div>Planned Start: {formatProjectDate(project.data.startDate)}</div>
                <div class="mt-1 font-medium text-info">Planned</div>
              </div>
            )}
          </div>
        </div>
      </div>
    </header>
    
    <!-- Project Content -->
    <div class="prose prose-lg max-w-none">
      <Content />
    </div>

    <!-- Sectioned Content -->
    {project.data.sections && project.data.sections.length > 0 && (
      <div class="mt-12 space-y-12">
        {project.data.sections.map((section, index) => (
          <div class="section">
            {section.type === 'content' ? (
              <div class="prose prose-lg max-w-none">
                {section.title && <h2 class="text-3xl font-bold mb-6">{section.title}</h2>}
                <div set:html={marked(section.content || '')} />
              </div>
            ) : section.type === 'gallery' && section.gallery ? (
              <div class="gallery-section">
                {section.title && <h2 class="text-3xl font-bold mb-8 text-center">{section.title}</h2>}
                {/* Layout-aware gallery rendering */}
                {section.galleryOptions?.layout === 'side-by-side' ? (
                  <div class="flex flex-col lg:flex-row gap-8 items-center">
                    <div class="lg:w-1/2 prose prose-lg">
                      <div set:html={marked(section.content || '')} />
                    </div>
                    <div class="lg:w-1/2">
                      <ProjectGallery 
                        images={section.gallery}
                        title={section.title || `Gallery ${index + 1}`}
                        autoplay={section.galleryOptions?.autoplay || false}
                        autoplayInterval={section.galleryOptions?.autoplayInterval || 4000}
                        showThumbnails={section.galleryOptions?.showThumbnails !== false}
                        showIndicators={section.galleryOptions?.showIndicators !== false}
                        size={section.galleryOptions?.size || 'medium'}
                        client:load
                      />
                    </div>
                  </div>
                ) : section.galleryOptions?.layout === 'wrapped' ? (
                  <div>
                    <div 
                      class={`gallery-wrapped ${
                        section.galleryOptions?.float === 'left' ? 'float-left mr-6 mb-4' :
                        section.galleryOptions?.float === 'right' ? 'float-right ml-6 mb-4' :
                        'mx-auto mb-6'
                      } ${
                        typeof section.galleryOptions?.size === 'number' ? '' :
                        section.galleryOptions?.size === 'small' ? 'w-64' :
                        section.galleryOptions?.size === 'large' ? 'w-96' :
                        section.galleryOptions?.size === 'full' ? 'w-full' :
                        'w-80'
                      }`}
                      style={typeof section.galleryOptions?.size === 'number' ? `width: ${section.galleryOptions.size}px;` : undefined}
                    >
                      <ProjectGallery 
                        images={section.gallery}
                        title={section.title || `Gallery ${index + 1}`}
                        autoplay={section.galleryOptions?.autoplay || false}
                        autoplayInterval={section.galleryOptions?.autoplayInterval || 4000}
                        showThumbnails={section.galleryOptions?.showThumbnails !== false}
                        showIndicators={section.galleryOptions?.showIndicators !== false}
                        size={section.galleryOptions?.size || 'medium'}
                        client:load
                      />
                    </div>
                    {section.content && (
                      <div class="prose prose-lg max-w-none">
                        <div set:html={marked(section.content)} />
                      </div>
                    )}
                  </div>
                ) : section.galleryOptions?.layout === 'stacked' ? (
                  <div class="space-y-8">
                    {section.content && (
                      <div class="prose prose-lg max-w-none">
                        <div set:html={marked(section.content)} />
                      </div>
                    )}
                    <div class={`mx-auto ${
                      typeof section.galleryOptions?.size === 'number' ? `max-w-[${section.galleryOptions.size}px]` :
                      section.galleryOptions?.size === 'small' ? 'max-w-md' :
                      section.galleryOptions?.size === 'large' ? 'max-w-4xl' :
                      section.galleryOptions?.size === 'full' ? 'w-full' :
                      'max-w-2xl'
                    }`}>
                      <ProjectGallery 
                        images={section.gallery}
                        title={section.title || `Gallery ${index + 1}`}
                        autoplay={section.galleryOptions?.autoplay || false}
                        autoplayInterval={section.galleryOptions?.autoplayInterval || 4000}
                        showThumbnails={section.galleryOptions?.showThumbnails !== false}
                        showIndicators={section.galleryOptions?.showIndicators !== false}
                        size={section.galleryOptions?.size || 'medium'}
                        client:load
                      />
                    </div>
                  </div>
                ) : (
                  /* Default layout */
                  <div class={`mx-auto ${
                    typeof section.galleryOptions?.size === 'number' ? `max-w-[${section.galleryOptions.size}px]` :
                    section.galleryOptions?.size === 'small' ? 'max-w-md' :
                    section.galleryOptions?.size === 'large' ? 'max-w-4xl' :
                    section.galleryOptions?.size === 'full' ? 'w-full' :
                    'max-w-2xl'
                  }`}>
                    <ProjectGallery 
                      images={section.gallery}
                      title={section.title || `Gallery ${index + 1}`}
                      autoplay={section.galleryOptions?.autoplay || false}
                      autoplayInterval={section.galleryOptions?.autoplayInterval || 4000}
                      showThumbnails={section.galleryOptions?.showThumbnails !== false}
                      showIndicators={section.galleryOptions?.showIndicators !== false}
                      size={section.galleryOptions?.size || 'medium'}
                      client:load
                    />
                  </div>
                )}
              </div>
            ) : section.type === 'interleaved' && section.contentGalleryPairs ? (
              <div class="interleaved-section">
                {section.title && <h2 class="text-3xl font-bold mb-8 text-center">{section.title}</h2>}
                <div class="space-y-12">
                  {section.contentGalleryPairs.map((pair, pairIndex) => (
                    <div class={`content-gallery-pair ${
                      pair.layout === 'side-by-side' ? 'flex flex-col lg:flex-row gap-8 items-start' :
                      pair.layout === 'content-first' ? 'space-y-6' :
                      pair.layout === 'gallery-first' ? 'space-y-6' :
                      pair.layout === 'wrapped' ? 'clear-both' :
                      'space-y-6'
                    }`}>
                      {pair.layout === 'side-by-side' ? (
                        <>
                          {pair.content && (
                            <div class="lg:w-1/2 prose prose-lg">
                              <div set:html={marked(pair.content)} />
                            </div>
                          )}
                          {pair.gallery && (
                            <div class="lg:w-1/2">
                              <ProjectGallery 
                                images={pair.gallery}
                                title={`Gallery ${index + 1}-${pairIndex + 1}`}
                                autoplay={section.galleryOptions?.autoplay || false}
                                autoplayInterval={section.galleryOptions?.autoplayInterval || 4000}
                                showThumbnails={section.galleryOptions?.showThumbnails !== false}
                                showIndicators={section.galleryOptions?.showIndicators !== false}
                                size={section.galleryOptions?.size || 'medium'}
                                client:load
                              />
                            </div>
                          )}
                        </>
                      ) : pair.layout === 'content-first' ? (
                        <>
                          {pair.content && (
                            <div class="prose prose-lg max-w-none">
                              <div set:html={marked(pair.content)} />
                            </div>
                          )}
                          {pair.gallery && (
                            <div class={`mx-auto ${
                              typeof section.galleryOptions?.size === 'number' ? `max-w-[${section.galleryOptions.size}px]` :
                              section.galleryOptions?.size === 'small' ? 'max-w-md' :
                              section.galleryOptions?.size === 'large' ? 'max-w-4xl' :
                              section.galleryOptions?.size === 'full' ? 'w-full' :
                              'max-w-2xl'
                            }`}>
                              <ProjectGallery 
                                images={pair.gallery}
                                title={`Gallery ${index + 1}-${pairIndex + 1}`}
                                autoplay={section.galleryOptions?.autoplay || false}
                                autoplayInterval={section.galleryOptions?.autoplayInterval || 4000}
                                showThumbnails={section.galleryOptions?.showThumbnails !== false}
                                showIndicators={section.galleryOptions?.showIndicators !== false}
                                size={section.galleryOptions?.size || 'medium'}
                                client:load
                              />
                            </div>
                          )}
                        </>
                      ) : pair.layout === 'gallery-first' ? (
                        <>
                          {pair.gallery && (
                            <div class={`mx-auto ${
                              typeof section.galleryOptions?.size === 'number' ? `max-w-[${section.galleryOptions.size}px]` :
                              section.galleryOptions?.size === 'small' ? 'max-w-md' :
                              section.galleryOptions?.size === 'large' ? 'max-w-4xl' :
                              section.galleryOptions?.size === 'full' ? 'w-full' :
                              'max-w-2xl'
                            }`}>
                              <ProjectGallery 
                                images={pair.gallery}
                                title={`Gallery ${index + 1}-${pairIndex + 1}`}
                                autoplay={section.galleryOptions?.autoplay || false}
                                autoplayInterval={section.galleryOptions?.autoplayInterval || 4000}
                                showThumbnails={section.galleryOptions?.showThumbnails !== false}
                                showIndicators={section.galleryOptions?.showIndicators !== false}
                                size={section.galleryOptions?.size || 'medium'}
                                client:load
                              />
                            </div>
                          )}
                          {pair.content && (
                            <div class="prose prose-lg max-w-none">
                              <div set:html={marked(pair.content)} />
                            </div>
                          )}
                        </>
                      ) : (
                        /* Wrapped layout */
                        <>
                          {pair.gallery && (
                            <div class="float-left mr-6 mb-4 w-80">
                              <ProjectGallery 
                                images={pair.gallery}
                                title={`Gallery ${index + 1}-${pairIndex + 1}`}
                                autoplay={section.galleryOptions?.autoplay || false}
                                autoplayInterval={section.galleryOptions?.autoplayInterval || 4000}
                                showThumbnails={section.galleryOptions?.showThumbnails !== false}
                                showIndicators={section.galleryOptions?.showIndicators !== false}
                                size={section.galleryOptions?.size || 'medium'}
                                client:load
                              />
                            </div>
                          )}
                          {pair.content && (
                            <div class="prose prose-lg max-w-none">
                              <div set:html={marked(pair.content)} />
                            </div>
                          )}
                        </>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            ) : null}
          </div>
        ))}
      </div>
    )}

    <!-- Gallery: After Content -->
    {project.data.gallery && project.data.gallery.length > 0 && project.data.galleryPosition === 'after-content' && (
      <div class="mt-12">
        <h2 class="text-3xl font-bold mb-8">
          {project.data.galleryTitle || "Project Gallery"}
        </h2>
        <ProjectGallery 
          images={project.data.gallery}
          title={project.data.galleryTitle || project.data.title}
          autoplay={project.data.galleryOptions?.autoplay !== undefined ? project.data.galleryOptions.autoplay : project.data.gallery.length > 1}
          autoplayInterval={project.data.galleryOptions?.autoplayInterval || 4000}
          showThumbnails={project.data.galleryOptions?.showThumbnails !== undefined ? project.data.galleryOptions.showThumbnails : true}
          showIndicators={project.data.galleryOptions?.showIndicators !== false}
          size={project.data.galleryOptions?.size || 'medium'}
          client:load
        />
      </div>
    )}

    <!-- Gallery: Dedicated Section -->
    {project.data.gallery && project.data.gallery.length > 0 && project.data.galleryPosition === 'dedicated-section' && (
      <div class="mt-12 py-8 bg-base-100 rounded-xl">
        <div class="px-6">
          <h2 class="text-3xl font-bold mb-8 text-center">
            {project.data.galleryTitle || "Project Gallery"}
          </h2>
          <ProjectGallery 
            images={project.data.gallery}
            title={project.data.galleryTitle || project.data.title}
            autoplay={project.data.galleryOptions?.autoplay !== undefined ? project.data.galleryOptions.autoplay : project.data.gallery.length > 1}
            autoplayInterval={project.data.galleryOptions?.autoplayInterval || 4000}
            showThumbnails={project.data.galleryOptions?.showThumbnails !== undefined ? project.data.galleryOptions.showThumbnails : true}
            showIndicators={project.data.galleryOptions?.showIndicators !== false}
            size={project.data.galleryOptions?.size || 'medium'}
            client:load
          />
        </div>
      </div>
    )}

    <!-- Gallery: Before Versions -->
    {project.data.gallery && project.data.gallery.length > 0 && project.data.galleryPosition === 'before-versions' && (
      <div class="mt-12">
        <h2 class="text-3xl font-bold mb-8">
          {project.data.galleryTitle || "Project Overview"}
        </h2>
        <ProjectGallery 
          images={project.data.gallery}
          title={project.data.galleryTitle || project.data.title}
          autoplay={project.data.galleryOptions?.autoplay !== undefined ? project.data.galleryOptions.autoplay : project.data.gallery.length > 1}
          autoplayInterval={project.data.galleryOptions?.autoplayInterval || 4000}
          showThumbnails={project.data.galleryOptions?.showThumbnails !== undefined ? project.data.galleryOptions.showThumbnails : true}
          showIndicators={project.data.galleryOptions?.showIndicators !== false}
          size={project.data.galleryOptions?.size || 'medium'}
          client:load
        />
      </div>
    )}

    <!-- Project Versions -->
    {project.data.versions && project.data.versions.length > 0 && (
      <div class="mt-12">
        {/* Only show header if versionsTitle is not explicitly set to empty string */}
        {project.data.versionsTitle !== "" && (
          <h2 class="text-3xl font-bold mb-8">
            {project.data.versionsTitle || "Project Versions"}
          </h2>
        )}
        
        <!-- Version Selector -->
        <div class="mb-6">
          <div class="tabs tabs-boxed w-fit bg-base-200/50">
            {project.data.versions.slice().reverse().map((version, index) => (
              <button 
                class={`tab transition-all duration-200 ${index === 0 ? 'tab-active' : ''} hover:bg-primary/10`}
                onclick={`window.showVersion(${index})`}
                id={`version-tab-${index}`}
              >
                {version.version}
              </button>
            ))}
          </div>
        </div>
        
        <!-- Version Content -->
        <div class="relative">
          {project.data.versions.slice().reverse().map((version, index) => (
            <div 
              class={`version-content transition-all duration-300 ${index === 0 ? 'block' : 'hidden'}`}
              id={`version-${index}`}
            >
              <div class="version-card rounded-lg p-6">
                {version.gallery && version.gallery.length > 0 && (version.galleryOptions?.size === 'full' || version.galleryOptions?.layout === 'stacked') ? (
                  // Full-width or stacked gallery layout
                  <div class="space-y-6">
                    {/* Version Info (full width) */}
                    <div class="w-full">
                      <div class="flex items-center gap-3 mb-3">
                        <h3 class="text-2xl font-bold">{version.version}</h3>
                        <div class={`badge ${
                          version.status === 'completed' ? 'badge-success' : 
                          version.status === 'in-progress' ? 'badge-warning' : 
                          'badge-info'
                        }`}>
                          {version.status.replace('-', ' ')}
                        </div>
                      </div>
                      
                      <h4 class="text-xl font-semibold mb-3">{version.title}</h4>
                      <p class="text-base-content/80 mb-4">{version.description}</p>
                      
                      <!-- Achievements -->
                      {version.achievements && version.achievements.length > 0 && (
                        <div class="mb-4">
                          <h5 class="text-sm font-semibold mb-2">Key Achievements</h5>
                          <ul class="list-disc list-inside text-sm space-y-1">
                            {version.achievements.map(achievement => (
                              <li>{achievement}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      <!-- Learnings -->
                      {version.learnings && version.learnings.length > 0 && (
                        <div class="mb-4">
                          <h5 class="text-sm font-semibold mb-2">Key Learnings</h5>
                          <ul class="list-disc list-inside text-sm space-y-1">
                            {version.learnings.map(learning => (
                              <li>{learning}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      <!-- Version Timeline and Links -->
                      <div class="mb-6">
                        <div class="text-sm text-base-content/60 mb-3">
                          {version.status === 'completed' && version.endDate ? (
                            <div>
                              <div>Started: {formatProjectDate(version.startDate)}</div>
                              <div>Completed: {formatProjectDate(version.endDate)}</div>
                              <div class="font-medium">
                                Duration: {calculateDuration(version.startDate, version.endDate)}
                              </div>
                            </div>
                          ) : version.status === 'in-progress' ? (
                            <div>
                              <div>Started: {formatProjectDate(version.startDate)}</div>
                              <div class="font-medium text-warning">In Progress</div>
                            </div>
                          ) : (
                            <div>
                              <div>Planned: {formatProjectDate(version.startDate)}</div>
                            </div>
                          )}
                        </div>
                        
                        <!-- Version Links -->
                        <div class="flex gap-2">
                          {version.githubUrl && (
                            <a 
                              href={version.githubUrl} 
                              class="btn btn-sm btn-outline"
                              target="_blank"
                              rel="noopener noreferrer"
                            >
                              GitHub
                            </a>
                          )}
                          {version.liveUrl && (
                            <a 
                              href={version.liveUrl} 
                              class="btn btn-sm btn-primary"
                              target="_blank"
                              rel="noopener noreferrer"
                            >
                              Demo
                            </a>
                          )}
                        </div>
                      </div>
                      
                      {/* Version Content (Markdown) */}
                      {version.content && (
                        <div class="prose prose-sm max-w-none" set:html={marked(version.content)} />
                      )}
                    </div>
                    
                    {/* Full-width or Stacked Gallery */}
                    <div class="w-full">
                      <ProjectGallery 
                        images={version.gallery}
                        title={`${version.version} Gallery`}
                        autoplay={version.galleryOptions?.autoplay !== undefined ? version.galleryOptions.autoplay : version.gallery.length > 1}
                        autoplayInterval={version.galleryOptions?.autoplayInterval || 5000}
                        showThumbnails={version.galleryOptions?.showThumbnails !== undefined ? version.galleryOptions.showThumbnails : version.gallery.length > 2}
                        showIndicators={version.galleryOptions?.showIndicators !== false}
                        size={version.galleryOptions?.size || 'medium'}
                        client:load
                      />
                    </div>
                  </div>
                ) : version.gallery && version.gallery.length > 0 && version.galleryOptions?.layout === 'wrapped' ? (
                  // Wrapped gallery layout
                  <div class="version-content-wrapper">
                    <div 
                      class={`gallery-wrapped ${
                        version.galleryOptions?.float === 'left' ? 'float-left mr-6 mb-4' :
                        version.galleryOptions?.float === 'right' ? 'float-right ml-6 mb-4' :
                        'float-left mr-6 mb-4'
                      } ${
                        typeof version.galleryOptions?.size === 'number' ? '' :
                        version.galleryOptions?.size === 'small' ? 'w-64' :
                        version.galleryOptions?.size === 'large' ? 'w-96' :
                        'w-80'
                      }`}
                      style={typeof version.galleryOptions?.size === 'number' ? `width: ${version.galleryOptions.size}px;` : undefined}
                    >
                      <ProjectGallery 
                        images={version.gallery}
                        title={`${version.version} Gallery`}
                        autoplay={version.galleryOptions?.autoplay !== undefined ? version.galleryOptions.autoplay : version.gallery.length > 1}
                        autoplayInterval={version.galleryOptions?.autoplayInterval || 5000}
                        showThumbnails={version.galleryOptions?.showThumbnails !== undefined ? version.galleryOptions.showThumbnails : version.gallery.length > 2}
                        showIndicators={version.galleryOptions?.showIndicators !== false}
                        size={version.galleryOptions?.size || 'medium'}
                        client:load
                      />
                    </div>
                    
                    <!-- Version Info (wraps around gallery) -->
                    <div class="version-info">
                      <div class="flex items-center gap-3 mb-3">
                        <h3 class="text-2xl font-bold">{version.version}</h3>
                        <div class={`badge ${
                          version.status === 'completed' ? 'badge-success' : 
                          version.status === 'in-progress' ? 'badge-warning' : 
                          'badge-info'
                        }`}>
                          {version.status.replace('-', ' ')}
                        </div>
                      </div>
                      
                      <h4 class="text-xl font-semibold mb-3">{version.title}</h4>
                      <p class="text-base-content/80 mb-4">{version.description}</p>
                      
                      <!-- Achievements -->
                      {version.achievements && version.achievements.length > 0 && (
                        <div class="mb-4">
                          <h5 class="text-sm font-semibold mb-2">Key Achievements</h5>
                          <ul class="list-disc list-inside text-sm space-y-1">
                            {version.achievements.map(achievement => (
                              <li>{achievement}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      <!-- Learnings -->
                      {version.learnings && version.learnings.length > 0 && (
                        <div class="mb-4">
                          <h5 class="text-sm font-semibold mb-2">Key Learnings</h5>
                          <ul class="list-disc list-inside text-sm space-y-1">
                            {version.learnings.map(learning => (
                              <li>{learning}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      <!-- Version Timeline and Links -->
                      <div class="mb-6">
                        <div class="text-sm text-base-content/60 mb-3">
                          {version.status === 'completed' && version.endDate ? (
                            <div>
                              <div>Started: {formatProjectDate(version.startDate)}</div>
                              <div>Completed: {formatProjectDate(version.endDate)}</div>
                              <div class="font-medium">
                                Duration: {calculateDuration(version.startDate, version.endDate)}
                              </div>
                            </div>
                          ) : version.status === 'in-progress' ? (
                            <div>
                              <div>Started: {formatProjectDate(version.startDate)}</div>
                              <div class="font-medium text-warning">In Progress</div>
                            </div>
                          ) : (
                            <div>
                              <div>Planned: {formatProjectDate(version.startDate)}</div>
                            </div>
                          )}
                        </div>
                        
                        <!-- Version Links -->
                        <div class="flex gap-2">
                          {version.githubUrl && (
                            <a 
                              href={version.githubUrl} 
                              class="btn btn-sm btn-outline"
                              target="_blank"
                              rel="noopener noreferrer"
                            >
                              GitHub
                            </a>
                          )}
                          {version.liveUrl && (
                            <a 
                              href={version.liveUrl} 
                              class="btn btn-sm btn-primary"
                              target="_blank"
                              rel="noopener noreferrer"
                            >
                              Demo
                            </a>
                          )}
                        </div>
                      </div>
                      
                      <!-- Version Content (Markdown) -->
                      {version.content && (
                        <div class="prose prose-sm max-w-none" set:html={marked(version.content)} />
                      )}
                    </div>
                    
                    <!-- Clear float -->
                    <div class="clear-both"></div>
                  </div>
                ) : (
                  <!-- Standard two-column or side-by-side layout -->
                  <div class="flex flex-col lg:flex-row gap-6">
                    <!-- Version Info -->
                    <div class={(version.gallery || version.images) && ((version.gallery && version.gallery.length > 0) || (version.images && version.images.length > 0)) && version.galleryOptions?.size !== 'full' ? "lg:w-2/3" : "w-full"}>
                      <div class="flex items-center gap-3 mb-3">
                        <h3 class="text-2xl font-bold">{version.version}</h3>
                        <div class={`badge ${
                          version.status === 'completed' ? 'badge-success' : 
                          version.status === 'in-progress' ? 'badge-warning' : 
                          'badge-info'
                        }`}>
                          {version.status.replace('-', ' ')}
                        </div>
                      </div>
                      
                      <h4 class="text-xl font-semibold mb-3">{version.title}</h4>
                      <p class="text-base-content/80 mb-4">{version.description}</p>
                      
                      <!-- Achievements -->
                      {version.achievements && version.achievements.length > 0 && (
                        <div class="mb-4">
                          <h5 class="text-sm font-semibold mb-2">Key Achievements</h5>
                          <ul class="list-disc list-inside text-sm space-y-1">
                            {version.achievements.map(achievement => (
                              <li>{achievement}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      <!-- Learnings -->
                      {version.learnings && version.learnings.length > 0 && (
                        <div class="mb-4">
                          <h5 class="text-sm font-semibold mb-2">Key Learnings</h5>
                          <ul class="list-disc list-inside text-sm space-y-1">
                            {version.learnings.map(learning => (
                              <li>{learning}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      <!-- Version Timeline and Links -->
                      <div class="mb-6">
                        <div class="text-sm text-base-content/60 mb-3">
                          {version.status === 'completed' && version.endDate ? (
                            <div>
                              <div>Started: {formatProjectDate(version.startDate)}</div>
                              <div>Completed: {formatProjectDate(version.endDate)}</div>
                              <div class="font-medium">
                                Duration: {calculateDuration(version.startDate, version.endDate)}
                              </div>
                            </div>
                          ) : version.status === 'in-progress' ? (
                            <div>
                              <div>Started: {formatProjectDate(version.startDate)}</div>
                              <div class="font-medium text-warning">In Progress</div>
                            </div>
                          ) : (
                            <div>
                              <div>Planned: {formatProjectDate(version.startDate)}</div>
                            </div>
                          )}
                        </div>
                        
                        <!-- Version Links -->
                        <div class="flex gap-2">
                          {version.githubUrl && (
                            <a 
                              href={version.githubUrl} 
                              class="btn btn-sm btn-outline"
                              target="_blank"
                              rel="noopener noreferrer"
                            >
                              GitHub
                            </a>
                          )}
                          {version.liveUrl && (
                            <a 
                              href={version.liveUrl} 
                              class="btn btn-sm btn-primary"
                              target="_blank"
                              rel="noopener noreferrer"
                            >
                              Demo
                            </a>
                          )}
                        </div>
                      </div>
                      
                      <!-- Version Content (Markdown) -->
                      {version.content && (
                        <div class="prose prose-sm max-w-none" set:html={marked(version.content)} />
                      )}
                    </div>
                  
                    <!-- Version Images/Gallery -->
                    {(version.gallery || version.images) && version.galleryOptions?.size !== 'full' && (
                      <div class={`${
                        typeof version.galleryOptions?.size === 'number' ? 'flex-shrink-0' :
                        version.galleryOptions?.size === 'small' ? 'lg:w-1/4' :
                        version.galleryOptions?.size === 'large' ? 'lg:w-1/2' :
                        'lg:w-1/3'
                      }`}
                      style={typeof version.galleryOptions?.size === 'number' ? { width: `${version.galleryOptions.size}px` } : {}}>
                        {version.gallery && version.gallery.length > 0 ? (
                          <ProjectGallery 
                            images={version.gallery}
                            title={`${version.version} Gallery`}
                            autoplay={version.galleryOptions?.autoplay !== undefined ? version.galleryOptions.autoplay : version.gallery.length > 1}
                            autoplayInterval={version.galleryOptions?.autoplayInterval || 5000}
                            showThumbnails={version.galleryOptions?.showThumbnails !== undefined ? version.galleryOptions.showThumbnails : version.gallery.length > 2}
                            showIndicators={version.galleryOptions?.showIndicators !== false}
                            size={version.galleryOptions?.size || 'medium'}
                            client:load
                          />
                        ) : version.images && version.images.length > 0 && (
                          <div class="grid grid-cols-1 gap-3">
                            {version.images.slice(0, 3).map((img, imgIndex) => (
                              <Image 
                                src={img}
                                alt={`${version.title} - Image ${imgIndex + 1}`}
                                width={300}
                                height={200}
                                class="w-full h-32 object-cover rounded-lg"
                              />
                            ))}
                            {version.images.length > 3 && (
                              <div class="text-sm text-base-content/60 text-center">
                                +{version.images.length - 3} more images
                              </div>
                            )}
                          </div>
                        )}
                      </div>
                    )}
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    )}

    <script is:inline>
      window.showVersion = function(selectedIndex) {
        // Hide all version content
        document.querySelectorAll('.version-content').forEach((content) => {
          content.classList.add('hidden');
          content.classList.remove('block');
        });
        
        // Remove active state from all tabs and clear their styling
        document.querySelectorAll('[id^="version-tab-"]').forEach(tab => {
          tab.classList.remove('tab-active');
          // Clear inline styles
          tab.style.backgroundColor = '';
          tab.style.color = '';
          tab.style.border = '';
          tab.style.fontWeight = '';
        });
        
        // Show selected version
        const selectedContent = document.getElementById(`version-${selectedIndex}`);
        const selectedTab = document.getElementById(`version-tab-${selectedIndex}`);
        
        if (selectedContent) {
          selectedContent.classList.remove('hidden');
          selectedContent.classList.add('block');
        }
        
        if (selectedTab) {
          selectedTab.classList.add('tab-active');
          // Force the active tab styling with inline styles for immediate effect
          selectedTab.style.backgroundColor = 'rgba(59, 130, 246, 0.2)';
          selectedTab.style.color = 'rgba(59, 130, 246, 1)';
          selectedTab.style.border = '1px solid rgba(59, 130, 246, 0.4)';
          selectedTab.style.fontWeight = '600';
        }
      };
      
      // Initialize active styling for the first tab immediately
      function initializeFirstTab() {
        const firstTab = document.querySelector('#version-tab-0');
        if (firstTab) {
          firstTab.classList.add('tab-active');
          // Apply active styling immediately
          firstTab.style.backgroundColor = 'rgba(59, 130, 246, 0.2)';
          firstTab.style.color = 'rgba(59, 130, 246, 1)';
          firstTab.style.border = '1px solid rgba(59, 130, 246, 0.4)';
          firstTab.style.fontWeight = '600';
        } else {
          console.error('First version tab not found!');
        }
      }
      
      // Run immediately and also on DOMContentLoaded
      initializeFirstTab();
      document.addEventListener('DOMContentLoaded', initializeFirstTab);
    </script>
    
    <!-- Navigation -->
    <div class="mt-12 pt-8 border-t border-base-300">
      <a href="/projects" class="btn btn-outline">
        ← Back to Projects
      </a>
    </div>

    <!-- Related Content -->
    {relatedContent.length > 0 && (
      <div class="mt-12 pt-8 border-t border-base-300">
        <h2 class="text-2xl font-bold mb-6">Related Content</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {relatedContent.map(item => (
            <article class="card bg-base-100 shadow hover:shadow-lg transition-shadow duration-200">
              <figure>
                <Image 
                  src={item.data.cover}
                  alt={item.data.title}
                  width={300}
                  height={200}
                  class="w-full h-32 object-cover"
                />
              </figure>
              <div class="card-body p-4">
                <div class="flex items-center gap-2 mb-2">
                  <div class={`badge badge-sm ${
                    item.type === 'project' ? 'badge-primary' : 'badge-secondary'
                  }`}>
                    {item.type}
                  </div>
                  <div class="text-xs text-base-content/60">
                    {item.sharedTags.length} shared tag{item.sharedTags.length !== 1 ? 's' : ''}
                  </div>
                </div>
                <h3 class="card-title text-base">
                  <a 
                    href={`/${item.type === 'project' ? 'projects' : 'posts'}/${item.slug}/`}
                    class="hover:text-primary transition-colors"
                  >
                    {item.data.title}
                  </a>
                </h3>
                <div class="flex flex-wrap gap-1 mt-2">
                  {item.sharedTags.map(tag => (
                    <span class="badge badge-outline badge-xs">{tag}</span>
                  ))}
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
    )}
  </article>
</Layout>
