---
import { Image } from "astro:assets";
import logo from "../assets/logo.svg";
import Search from "astro-pagefind/components/Search";
import { MagnifyingGlassIcon, Bars3Icon, XMarkIcon } from "@heroicons/react/24/outline";
import ThemeToggle from '../components/ThemeToggle.astro';
---

<header class="sticky top-0 z-50 transition-all duration-300 bg-base-100" id="main-header">
  <!-- ********** Mobile (< lg): drawer & navbar ********** -->
  <div class="drawer lg:hidden">
    <!-- Hidden checkbox toggles the drawer -->
    <input id="nav-drawer" type="checkbox" class="drawer-toggle" />

    <div class="drawer-content flex flex-col">
      <nav class="navbar bg-base-100 w-full lg:px-4 relative px-2">
        <!-- Hamburger icon on the left -->
        <div class="flex-none">
          <label
            for="nav-drawer"
            aria-label="Open sidebar"
            class="btn btn-ghost btn-square"
          >
            <Bars3Icon className="h-5 w-5" />
          </label>
        </div>

        <!-- Logo centered absolutely -->
        <a
          href="/"
          class="absolute left-1/2 -translate-x-1/2 flex items-center"
        >
          <Image src={logo} alt="Stargarden logo" class="h-18 w-auto" />
        </a>
        <div class="flex-none ml-auto">
          <button
            aria-label="Open search"
            class="btn btn-ghost btn-square"
            onclick="search_modal.showModal()"
          >
            {/* Magnifying glass icon */}
            <MagnifyingGlassIcon className="h-5 w-5" />
          </button>
          <ThemeToggle />
        </div>
      </nav>
      <dialog id="search_modal" class="modal">
        <div
          class="modal-box w-11/12 max-w-2xl h-[90vh] overflow-y-auto flex flex-col relative"
        >
          <form method="dialog">
            <button
              class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
              aria-label="Close search"
            >
              <XMarkIcon className="h-5 w-5" />
            </button>
          </form>
          <div class="relative">
            <Search
              id="mobile-search"
              className="pagefind-ui w-full mt-8 mb-2"
              uiOptions={{ showImages: false }}
            />
          </div>
        </div>
      </dialog>
    </div>

    <!-- Slide‑out sidebar -->
    <div class="drawer-side">
      <label for="nav-drawer" class="drawer-overlay" aria-label="Close sidebar"
      ></label>
      <ul class="menu p-4 w-80 bg-base-100 min-h-full">
        <li>
          <a href="/about" class="normal-case font-bold text-xl">About</a>
        </li>
        <li>
          <a href="/projects" class="normal-case font-bold text-xl">Projects</a>
        </li>
        <li>
          <a href="/posts" class="normal-case font-bold text-xl">Posts</a>
        </li>
        <li>
          <a href="/tags" class="normal-case font-bold text-xl">Tags</a>
        </li>
      </ul>
    </div>
  </div>

  <!-- ********** Desktop (≥ lg): standard navbar ********** -->
  <nav
    class="navbar hidden lg:flex w-full bg-base-100"
    style="--navbar-padding:0;"
  >
    <div class="navbar-start flex-none">
      <a href="/" class="flex items-center gap-2">
        <Image src={logo} alt="Stargarden logo" class="h-18 w-auto" />
        <span class="text-xl font-bold">Stargarden</span>
      </a>
    </div>
    <div class="navbar-end flex-1">
      <ul class="menu menu-horizontal gap-1">
        <li>
          <a href="/about" class="normal-case font-bold text-lg">About</a>
        </li>
        <li>
          <a href="/projects" class="normal-case font-bold text-lg">Projects</a>
        </li>
        <li>
          <a href="/posts" class="normal-case font-bold text-lg">Posts</a>
        </li>
        <li>
          <a href="/tags" class="normal-case font-bold text-lg">Tags</a>
        </li>
      </ul>
  
      <Search
        id="search"
        className="pagefind-ui"
        uiOptions={{ showImages: false }}
      />    
      <ThemeToggle />
    </div>
  </nav>
</header>

<script>
  // Add scroll-based styling to header with smooth transitions
  function updateHeaderOnScroll() {
    const header = document.getElementById('main-header');
    if (!header) return;
    
    const scrollY = window.scrollY;
    const threshold = 20; // Lower threshold for smoother start
    const fullThreshold = 60; // Full effect threshold
    
    if (scrollY > threshold) {
      // Calculate opacity based on scroll progress
      const progress = Math.min((scrollY - threshold) / (fullThreshold - threshold), 1);
      
      // Scrolled down - add enhanced separation and directly modify background
      header.classList.add(
        'shadow-2xl', 
        'backdrop-blur-lg', 
        'header-scrolled'
      );
      
      // Gradually apply border with smooth opacity
      if (scrollY > fullThreshold) {
        header.classList.add('border-b-2', 'border-primary/30');
      } else {
        header.classList.remove('border-b-2', 'border-primary/30');
        // Apply a very subtle border that grows with scroll
        header.style.borderBottom = `1px solid rgba(147, 197, 253, ${0.1 * progress})`;
      }
      
      // Directly set background color via style for immediate effect
      if (document.documentElement.getAttribute('data-theme') === 'business') {
        header.style.backgroundColor = `rgba(100, 116, 139, ${0.9 + 0.08 * progress})`;
      } else {
        header.style.backgroundColor = `rgba(255, 255, 255, ${0.9 + 0.08 * progress})`;
      }
    } else {
      // At top - remove enhanced separation and reset background
      header.classList.remove(
        'shadow-2xl', 
        'backdrop-blur-lg', 
        'border-b-2', 
        'border-primary/30',
        'header-scrolled'
      );
      
      // Reset to default background and border
      header.style.backgroundColor = '';
      header.style.borderBottom = '';
    }
  }
  
  // Listen for scroll events with throttling for smoother performance
  let ticking = false;
  function requestTick() {
    if (!ticking) {
      requestAnimationFrame(updateHeaderOnScroll);
      ticking = true;
    }
  }
  
  function handleScroll() {
    ticking = false;
    requestTick();
  }
  
  window.addEventListener('scroll', handleScroll);
  
  // Check initial state
  updateHeaderOnScroll();
  
  // Listen for theme changes
  const observer = new MutationObserver(updateHeaderOnScroll);
  observer.observe(document.documentElement, { 
    attributes: true, 
    attributeFilter: ['data-theme'] 
  });
</script>

<style>
  /* Enhanced header separation with improved shadow and brightened background */
  .header-scrolled {
    /* Clean shadow for light mode - no blue accents */
    box-shadow: 
      0 4px 12px -2px rgba(0, 0, 0, 0.15),
      0 2px 4px -1px rgba(0, 0, 0, 0.1);
  }
  
  /* Light mode (corporate theme) - much brighter white background */
  [data-theme="corporate"] .header-scrolled {
    background-color: rgba(255, 255, 255, 0.98) !important; /* Pure white */
  }
  
  /* Dark mode (business theme) - much brighter background with blue accents */
  [data-theme="business"] .header-scrolled {
    /* Much brighter dark background - significantly lighter */
    background-color: rgba(100, 116, 139, 0.98) !important; /* Much lighter slate */
    
    /* Enhanced shadow with subtle blue accent for dark mode only */
    box-shadow: 
      0 4px 12px -2px rgba(0, 0, 0, 0.3),
      0 2px 4px -1px rgba(0, 0, 0, 0.2),
      0 0 0 1px rgba(147, 197, 253, 0.15); /* Subtle blue rim */
      
    /* Enhanced border in dark mode */
    border-bottom-color: rgba(147, 197, 253, 0.4);
  }
</style>